package fakeconn

import (
	"errors"
	"net"
	"syscall"
)

var (
	// All of the errors generated by Replay wrap this.
	ErrReplay = errors.New("replay error")
)

func IsReplayError(err error) bool {
	return errors.Is(err, ErrReplay)
}

type replayErr struct {
	error
}

func (err replayErr) Unwrap() error {
	return err.error
}

func (err replayErr) Is(target error) bool {
	return target == ErrReplay || errors.Is(err.error, target)
}

func (err replayErr) As(target interface{}) bool {
	return errors.As(err.error, target)
}

var (
	errBadPrefix      error = &replayErr{errors.New("bad prefix")}
	errBadHex         error = &replayErr{errors.New("bad hex")}
	errBadUnicode     error = &replayErr{errors.New("bad unicode")}
	errBadEscape      error = &replayErr{errors.New("bad escape")}
	errBadErr         error = &replayErr{errors.New("bad err")}
	errBadUTF8        error = &replayErr{errors.New("bad utf8")}
	errBadRead        error = &replayErr{errors.New("bad read")}
	errBadWrite       error = &replayErr{errors.New("bad write")}
	errClosed         error = &replayErr{net.ErrClosed}
	errPrematureClose error = &replayErr{errors.New("premature close")}
	errGeneric        error = &replayErr{errors.New("generic error")}
	errBrokenPipe     error = &replayErr{syscall.EPIPE}
)
